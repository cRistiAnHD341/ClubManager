<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    
    
    <!-- ===============================
         BOTONES MODERNOS
    =============================== -->

    <!-- Botón Base Moderno -->
    <Style x:Key="ModernButton" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="6">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center" 
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource DangerBrush}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Margin" Value="0,2,0,5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="RequiredLabel" TargetType="Label">
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Style.Triggers>
            <Trigger Property="Content" Value="{x:Null}">
                <Setter Property="Foreground" Value="{DynamicResource DangerBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Botones de Colores -->
    <Style x:Key="AccentButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
    </Style>

    <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}"/>
    </Style>

    <Style x:Key="WarningButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="{DynamicResource WarningBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}"/>
    </Style>

    <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="{DynamicResource DangerBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
    </Style>

    <Style x:Key="InfoButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="{DynamicResource InfoBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
    </Style>

    <!-- Botones de Icono -->
    <Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="DangerIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Background" Value="{DynamicResource DangerBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
    </Style>

    <!-- Botón de Menú -->
    <Style x:Key="MenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="20,12"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Botón de Acción -->
    <Style x:Key="ActionButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <!-- ===============================
         TEXTBOX Y CONTROLES DE ENTRADA
    =============================== -->

    <!-- TextBox Moderno -->
    <Style x:Key="ModernTextBox" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- PasswordBox Moderno -->
    <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Estilo ComboBox moderno corregido -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- ToggleButton principal -->
                        <ToggleButton x:Name="ToggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="4">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="20"/>
                                            </Grid.ColumnDefinitions>
                                            <Border Grid.Column="1" Background="Transparent">
                                                <TextBlock x:Name="Arrow" Text="▼" 
                                                       Foreground="{DynamicResource AccentBrush}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       FontSize="10"/>
                                            </Border>
                                        </Grid>
                                    </Border>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                                            <Setter TargetName="Arrow" Property="Text" Value="▲"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.6"/>
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>

                        <!-- Contenido seleccionado - CORREGIDO para DisplayMemberPath -->
                        <ContentPresenter x:Name="ContentSite"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      HorizontalAlignment="Left"
                                      IsHitTestVisible="False"/>

                        <!-- TextBox editable (para ComboBox editable) -->
                        <TextBox x:Name="PART_EditableTextBox"
                             Style="{x:Null}"
                             Background="Transparent"
                             BorderThickness="0"
                             Margin="{TemplateBinding Padding}"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             HorizontalAlignment="Left"
                             Focusable="True"
                             Visibility="Hidden"
                             IsReadOnly="{TemplateBinding IsReadOnly}"/>

                        <!-- Popup desplegable -->
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border Background="{DynamicResource SecondaryBackgroundBrush}"
                                    BorderBrush="{DynamicResource BorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="4"
                                    Margin="0,1,0,0">
                                    <Border.Effect>
                                        <DropShadowEffect Color="Black" Opacity="0.2" ShadowDepth="2" BlurRadius="8"/>
                                    </Border.Effect>
                                </Border>
                                <ScrollViewer Margin="1">
                                    <StackPanel IsItemsHost="True"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Mostrar TextBox cuando es editable -->
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBoxItem moderno -->
    <Style x:Key="ModernComboBoxItem" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ===============================
         BORDERS Y CONTENEDORES
    =============================== -->

    <!-- Border Moderno -->
    <Style x:Key="ModernBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="20"/>
    </Style>

    <!-- Tarjeta de Estadística -->
    <Style x:Key="StatCard" TargetType="Border">
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.1" ShadowDepth="2" BlurRadius="8"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===============================
         DATAGRID
    =============================== -->

    <!-- DataGrid Principal -->
    <Style x:Key="DataGridStyle" TargetType="DataGrid">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="RowHeight" Value="45"/>
    </Style>

    <!-- Estilo para TextBlock centrado -->
    <Style x:Key="CenterTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>
    <Style x:Key="CenterLeftTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
    </Style>

    <!-- ===============================
     CHECKBOXES MODERNOS
=============================== -->

    <!-- CheckBox Moderno -->
    <Style x:Key="ModernCheckBox" TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="8,0,0,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="CheckBoxBorder" 
                            Grid.Column="0"
                            Width="18" Height="18"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3">
                            <Path x:Name="CheckMark"
                              Data="M 2 6 L 6 10 L 14 2"
                              Stroke="White"
                              StrokeThickness="2"
                              Visibility="Collapsed"
                              StrokeLineJoin="Round"/>
                        </Border>

                        <ContentPresenter Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===============================
     BORDERS ESPECIALES
=============================== -->

    <!-- InfoBorder -->
    <Style x:Key="InfoBorder" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource InfoBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="6"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Margin" Value="0,10"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Blue" Opacity="0.1" ShadowDepth="1" BlurRadius="4"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- PlantillaCard -->
    <Style x:Key="PlantillaCard" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="15"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Opacity="0.1" ShadowDepth="2" BlurRadius="6"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Opacity="0.2" ShadowDepth="4" BlurRadius="10"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ===============================
     BOTONES ESPECIALES
=============================== -->

    <!-- CancelButton -->
    <Style x:Key="CancelButton" TargetType="Button" BasedOn="{StaticResource ModernButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource MutedBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Content" Value="Cancelar"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DangerBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="{DynamicResource DangerBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ===============================
     LABELS Y TEXTO
=============================== -->

    <!-- ModernLabel -->
    <Style x:Key="ModernLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="0,5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>
    <!-- ModernTextBlock -->
    <Style x:Key="ModernTextBlock" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="0,5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
    </Style>

    <!-- SectionTitleTextBlock -->
    <Style x:Key="SectionTitleTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Margin" Value="0,10,0,5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!-- SectionTitle -->
    <Style x:Key="SectionTitle" TargetType="Label">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Margin" Value="0,10,0,5"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- TitleLabel -->
    <Style x:Key="TitleLabel" TargetType="Label">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!--TitleTexblock -->
    <Style x:Key="TitleTextBlock" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!-- ===============================
     RADIO BUTTONS
=============================== -->

    <!-- ModernRadioButton -->
    <Style x:Key="ModernRadioButton" TargetType="RadioButton">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="8,0,0,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border x:Name="RadioBorder" 
                            Grid.Column="0"
                            Width="18" Height="18"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="9">
                            <Ellipse x:Name="RadioMark"
                                Width="8" Height="8"
                                Fill="White"
                                Visibility="Collapsed"/>
                        </Border>

                        <ContentPresenter Grid.Column="1"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="RadioBorder" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="RadioBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="RadioMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RadioBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ===============================
     PROGRESS BAR
=============================== -->

    <!-- ProgressBarStyle -->
    <Style x:Key="ProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <Grid>
                            <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                CornerRadius="10"/>
                            <Border x:Name="PART_Indicator"
                                Background="{TemplateBinding Foreground}"
                                HorizontalAlignment="Left"
                                CornerRadius="10"
                                Margin="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ModernWindowStyle -->
    <Style x:Key="ModernWindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ResizeMode" Value="CanResize"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="30"
                         CornerRadius="0"
                         GlassFrameThickness="0"
                         NonClientFrameEdges="None"
                         ResizeBorderThickness="5"
                         UseAeroCaptionButtons="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Title Bar -->
                            <Border Grid.Row="0" 
                                Background="{DynamicResource AccentBrush}"
                                WindowChrome.IsHitTestVisibleInChrome="True">
                                <Grid>
                                    <TextBlock Text="{TemplateBinding Title}"
                                         Foreground="White"
                                         FontSize="12"
                                         FontWeight="SemiBold"
                                         VerticalAlignment="Center"
                                         Margin="10,0"/>
                                </Grid>
                            </Border>

                            <!-- Content -->
                            <ContentPresenter Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ===============================
     TABS
=============================== -->

    <!-- TabStyle -->
    <Style x:Key="TabStyle" TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1,1,1,0"/>
        <Setter Property="Padding" Value="15,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="6,6,0,0"
                        Margin="0,0,2,0">
                        <ContentPresenter ContentSource="Header"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="1,2,1,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ===============================
         DATEPICKER Y COMBOBOX SIMPLES Y SEGUROS
    =============================== -->

    <Style x:Key="ModernDatePicker" TargetType="DatePicker">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- TextBox interno -->
                            <DatePickerTextBox x:Name="PART_TextBox"
                                             Grid.Column="0"
                                             Padding="{TemplateBinding Padding}"
                                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             FontSize="{TemplateBinding FontSize}"
                                             Foreground="{TemplateBinding Foreground}"/>

                            <!-- Botón calendario -->
                            <Button x:Name="PART_Button"
                                    Grid.Column="1"
                                    Width="25" Height="25"
                                    Margin="0,0,5,0"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Cursor="Hand"
                                    VerticalAlignment="Center"
                                    Focusable="False">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="Transparent" CornerRadius="3">
                                            <TextBlock Text="📅" FontSize="12" 
                                                       Foreground="{DynamicResource AccentBrush}"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                                                <Setter Property="Opacity" Value="0.1"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>

                            <!-- Popup del calendario -->
                            <Popup x:Name="PART_Popup"
                                   PlacementTarget="{Binding ElementName=Border}"
                                   Placement="Bottom"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   StaysOpen="False"
                                   AllowsTransparency="True"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Aplicar estilos automáticamente -->
    <Style TargetType="DatePicker" BasedOn="{StaticResource ModernDatePicker}"/>
    <Style TargetType="ComboBox" BasedOn="{StaticResource ModernComboBox}"/>
    <Style TargetType="ComboBoxItem" BasedOn="{StaticResource ModernComboBoxItem}"/>


    <!-- ===============================
         DATAGRID LIMPIO - SIN ERRORES
    =============================== -->

    <!-- DataGrid Principal - Sin líneas y sin errores -->
    <Style x:Key="ModernDataGrid" TargetType="DataGrid">
        <!-- Configuración básica -->
        <Setter Property="Background" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="RowBackground" Value="{DynamicResource SecondaryBackgroundBrush}"/>
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="RowHeight" Value="45"/>
        <Setter Property="ColumnHeaderHeight" Value="40"/>
        <Setter Property="FontSize" Value="13"/>

        <!-- ELIMINAR TODO TIPO DE LÍNEAS Y FOCO -->
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <!-- Comportamiento -->
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>

        <!-- Resources inline para sobrescribir colores del sistema -->
        <Style.Resources>
            <!-- Eliminar colores de foco del sistema -->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="{DynamicResource ForegroundColor}"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="{DynamicResource ForegroundColor}"/>

            <!-- Estilo para las celdas sin foco -->
            <Style TargetType="DataGridCell">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Padding" Value="12,8"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <Border Background="Transparent" 
                                    BorderThickness="0" 
                                    BorderBrush="Transparent"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Estilo para las filas -->
            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                        <Setter Property="Foreground" Value="White"/>
                        <Setter Property="FontWeight" Value="SemiBold"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- Estilo para los headers -->
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="FontSize" Value="13"/>
                <Setter Property="Padding" Value="12,10"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>
        </Style.Resources>
    </Style>

    <!-- ===============================
         ESTILOS PARA CONTENIDO
    =============================== -->

    <!-- TextBlock centrado -->
    <Style x:Key="CenterDataGridTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
    </Style>

    <!-- TextBlock izquierda -->
    <Style x:Key="LeftDataGridTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Margin" Value="5,0"/>
    </Style>

    <!-- TextBlock derecha -->
    <Style x:Key="RightDataGridTextBlock" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="Margin" Value="5,0"/>
    </Style>

    <!-- Badge para estados -->
    <Style x:Key="DataGridBadge" TargetType="Border">
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
    </Style>

    <!-- ===============================
         APLICACIÓN AUTOMÁTICA (opcional)
    =============================== -->

    <!-- Descomenta estas líneas si quieres aplicar automáticamente a todos los DataGrid -->
    <Style TargetType="DataGrid" BasedOn="{StaticResource ModernDataGrid}"/>
</ResourceDictionary>